<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="console">

    <parameterMap id="lightMapper" type="map">
        <parameter property="lmac" mode="IN"/>
        <parameter property="vaddr" mode="IN"/>
        <parameter property="product_id" mode="IN"/>
        <parameter property="mesh_id" mode="IN"/>
        <parameter property="x" mode="IN"/>
        <parameter property="y" mode="IN"/>
        <parameter property="host" mode="IN"/>
        <parameter property="other" mode="IN"/>
        <parameter property="status" mode="IN"/>
        <parameter property="result" mode="OUT" jdbcType="INTEGER"/>
    </parameterMap>

    <parameterMap id="commandMapper" type="map">
        <parameter property="host" mode="IN"/>
        <parameter property="mesh_id" mode="IN"/>
        <parameter property="ctype" mode="IN"/>
        <parameter property="cid" mode="IN"/>
        <parameter property="x" mode="IN"/>
        <parameter property="y" mode="IN"/>
        <parameter property="status" mode="IN"/>
        <parameter property="other" mode="IN"/>
        <parameter property="result" mode="OUT" jdbcType="INTEGER"/>
    </parameterMap>

    <parameterMap id="hostMapper" type="map">
        <parameter property="ip" mode="IN"/>
        <parameter property="meshId" mode="IN"/>
        <parameter property="host" mode="IN"/>
        <parameter property="mac" mode="IN"/>
        <parameter property="type" mode="IN"/>
        <parameter property="version" mode="IN"/>
        <parameter property="flag" mode="IN"/>
        <parameter property="status" mode="IN"/>
        <parameter property="result" mode="OUT" jdbcType="INTEGER"/>
    </parameterMap>

    <select id="refreshHost" statementType="CALLABLE">
        CALL refreshHost()
    </select>
    <select id="saveLight" parameterMap="lightMapper" resultType="map" statementType="CALLABLE">
        CALL save_light(?,?,?,?,?,?,?,?,?,?)
    </select>

    <select id="saveConsole" parameterMap="commandMapper" resultType="map" statementType="CALLABLE">
        CALL save_blt_console(?,?,?,?,?,?,?,?,?)
    </select>

    <select id="getLights" resultType="map">
        SELECT mname,COUNT(0) lmacn FROM f_light_demo GROUP BY mname
    </select>

    <select id="getHostInfo" resultType="map">
        SELECT
            IFNULL(mesh_name,'') mname,
            host_id,
            m.mesh_id,
            h.is_master,
            h.is_control
        FROM t_host_info h
        INNER JOIN t_host_mesh s ON s.hid = h.id
        INNER JOIN t_mesh m ON m.id = s.mid
        WHERE h.ip != '127.0.0.1'
        AND h.STATUS = 1
        ORDER BY host_id
    </select>

    <update id="saveHost" parameterType="ConsoleVo">
        UPDATE t_host_info h
        INNER JOIN t_host_mesh s ON h.id = s.hid
        INNER JOIN t_mesh m ON m.id = s.mid
        <set>
            <if test="is_control != null">
                is_control=#{is_control},
            </if>
            <if test="is_master != null">
                is_master=#{is_master},
            </if>
            h.log_date=now()
        </set>
        <if test="host!=null and host!=''">
            WHERE m.mesh_id=#{host}
        </if>
    </update>

    <select id="getHosts" resultType="string" parameterType="string">
        SELECT host_id FROM t_host_info WHERE 1=1
        <if test="_parameter!=null and _parameter!=''">
            AND is_control=1
        </if>
    </select>

    <select id="getHostsByGid" resultType="string" parameterType="string">
        SELECT host_id FROM t_host_info h
        INNER JOIN t_host_mesh s ON s.hid=h.id
        INNER JOIN t_mesh m ON m.id=s.mid
        INNER JOIN t_mesh_group r ON r.mid=m.id
        INNER JOIN t_mgroup g ON g.id=r.gid
        WHERE 1=1
        AND g.id in (
        SELECT g.id FROM t_host_info h
        INNER JOIN t_host_mesh s ON s.hid=h.id
        INNER JOIN t_mesh m ON m.id=s.mid
        INNER JOIN t_mesh_group r ON r.mid=m.id
        INNER JOIN t_mgroup g ON g.id=r.gid
        WHERE h.host_id=#{host}
        )
    </select>

    <select id="getPlaceHost" resultType="string" parameterType="string">
        SELECT
            h.host_id
        FROM
            t_host_info h
        INNER JOIN t_host_mesh mh ON mh.hid = h.id
        INNER JOIN t_mesh m ON m.id=mh.mid
        INNER JOIN t_mesh_group mg ON mg.mid = mh.mid
        INNER JOIN t_mgroup g ON g.id = mg.gid
        INNER JOIN t_place_group pg ON pg.gid=g.id
        INNER JOIN t_mplace p ON p.id=pg.pid
        WHERE pg.pid=(
        SELECT
            pid
        FROM
            t_place_group
        WHERE
            gid = (
                SELECT
                    gid
                FROM
                    t_host_info h
                INNER JOIN t_host_mesh mh ON mh.hid = h.id
                INNER JOIN t_mesh_group mg ON mg.mid = mh.mid
                WHERE
                    mh.hid = (
                        SELECT
                            id
                        FROM
                            t_host_info
                        WHERE
                            host_id = #{host}
                    )
            )
        )
    </select>

    <select id="getGroupHosts" resultType="string" parameterType="string">
        SELECT
            host_id
        FROM
            t_host_info h
        INNER JOIN t_host_mesh s ON s.hid = h.id
        INNER JOIN t_mesh m ON m.id = s.mid
        INNER JOIN t_mesh_group r ON r.mid = m.id
        INNER JOIN t_mgroup g ON g.id = r.gid
        WHERE 1 = 1
        AND g.id IN (
            SELECT
                gid
            FROM
                t_mesh_group
            WHERE
                master_id IN (
                    SELECT
                        h.id
                    FROM
                        t_host_info h
                    INNER JOIN t_master_group s ON s.child_id = h.id
                    WHERE
                        s.hid = (
                            SELECT
                                id
                            FROM
                                t_host_info
                            WHERE
                                host_id = #{host}
                        )
                )
        )
    </select>

    <select id="getMaster" resultType="string" parameterType="string">
        SELECT host_id FROM t_host_info WHERE is_master=1 AND host_id = #{host} LIMIT 1
    </select>

    <select id="getAll" resultType="string">
        SELECT host_id FROM t_host_info WHERE host_id IS NOT NULL
    </select>

    <select id="getCron" resultType="CronVo" parameterType="list">
        SELECT cron_name cronName,mesh_id meshId,scene_id sceneId,item_set itemSet,command,repetition,cron FROM t_cron
        WHERE 1=1
        <if test="list != null and list.size()>0">
            AND mesh_id IN
            <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <delete id="deleteCron" parameterType="list">
        <if test="list != null and list.size()>0">
            DELETE FROM t_cron WHERE mesh_id IN
            <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
    </delete>

    <insert id="insertCron" parameterType="list">
        INSERT IGNORE INTO
        t_cron(cron_name,mesh_id,scene_id,item_set,repetition,cron,command,create_date,update_date) VALUES
        <foreach collection="list" item="v" index="index" separator=",">
            (
            #{v.cronName},#{v.meshId},#{v.sceneId},#{v.itemSet},#{v.repetition},#{v.cron},#{v.command},now(),now()
            )
        </foreach>
    </insert>

    <select id="getHostId" resultType="string" parameterType="string">
        SELECT host_id FROM t_host_info h
        INNER JOIN t_host_mesh s ON h.id=s.hid
        INNER JOIN t_mesh m ON m.id = s.mid
        WHERE h.host_id=#{host} OR h.ip=#{host} OR m.mesh_id=#{host} LIMIT 1
    </select>

    <select id="getVaddr" resultType="string">
        SELECT vaddr FROM t_light_info
    </select>

    <select id="getLnum" resultType="map">
        SELECT host, COUNT(1) lnum FROM t_light_info group by host
    </select>

    <select id="getLight" resultType="string" parameterType="string">
        SELECT vaddr FROM t_light_info WHERE host=#{ip}
    </select>

    <select id="getTotal" resultType="int">
        SELECT COUNT(0) lmacn FROM f_light_demo
    </select>

    <insert id="insertLog" parameterType="string">
        INSERT INTO f_light_console(ip,msg,log_date) VALUE (#{ip},#{msg},now())
    </insert>

    <insert id="insertHost" parameterType="map">
        REPLACE INTO t_host_info(ip,host_id,log_date) VALUE (#{ip},#{hostId},now())
    </insert>

    <select id="saveUpdateHosts" parameterMap="hostMapper" resultType="map" statementType="CALLABLE">
        CALL saveUpdateHost(?,?,?,?,?,?,?,?,?)
    </select>

    <update id="updateHostsFlag" parameterType="map">
        UPDATE t_host_info
        <set>
            <if test="flag != null">
                flag=#{flag},
            </if>
            log_date=now()
        </set>
        WHERE host_id=#{host}
    </update>

    <update id="updateHostsStatus" parameterType="list">
        UPDATE t_host_info SET status=0,log_date=now() WHERE host_id NOT IN
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="flushHostsStatus" parameterType="list">
        UPDATE t_host_info SET status=1,log_date=now() WHERE host_id IN
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="saveHostsStatus">
        UPDATE t_host_info SET status=0,log_date=now()
    </update>

    <select id="selectIn" parameterType="map" resultType="int">
        SELECT COUNT(0) lumn FROM t_light_info WHERE host=#{ip} AND vaddr IN
        <foreach collection="list" index="index" item="info" separator="," open="(" close=")">
            #{info}
        </foreach>
    </select>

    <select id="selectNotIn" parameterType="map" resultType="map">
        SELECT * FROM t_light_info WHERE vaddr NOT IN
        <foreach collection="list" index="index" item="info" separator="," open="(" close=")">
            #{info.vaddr}
        </foreach>
    </select>

    <update id="saveUpdate" parameterType="map">
        UPDATE t_light_info SET log_date=now(),`status`=NULL ,x=NULL ,y=NULL WHERE host=#{host} AND vaddr NOT IN
        <foreach collection="list" index="index" item="info" separator="," open="(" close=")">
            #{info}
        </foreach>
    </update>

    <update id="saveUpdate2" parameterType="map">
        UPDATE t_light_info SET log_date=now(),`status`=NULL ,x=NULL ,y=NULL WHERE host=#{host} AND lmac NOT IN
        <foreach collection="list" index="index" item="info" separator="," open="(" close=")">
            #{info}
        </foreach>
    </update>

    <insert id="batchInsert" parameterType="map">
        INSERT INTO t_vaddr(vaddr) VALUES
        <foreach collection="list" item="v" index="index" separator=",">
            (
            #{v.vaddr}
            )
        </foreach>
    </insert>

    <delete id="deleteTimerData" parameterType="map">
            DELETE FROM f_time_point WHERE tsid IN (SELECT l.id from (SELECT id FROM f_time_line WHERE mesh_id=#{meshId}) AS l);
            DELETE FROM f_time_line WHERE mesh_id=#{meshId};
    </delete>


</mapper>